------STORED PROCEDURE--------------

---PROCEDURE WITHOUT PARAMETER
//1.CREATE A STORED PROCEDURE GET_STUDENT_DATA11() TO VIEW ALL RECORDS FROM STUDENT_INFO TABLE.
DELIMITER $$
CREATE PROCEDURE GET_STUDENT_DATA11()
BEGIN
SELECT * FROM STUDENT_INFO;
END;$$
DELIMITER;
//call SP
call get_student_data11();

//2.create a sp to display people whose age is greater than 30 and total no. of people
DELIMITER &&  
CREATE PROCEDURE gs3 ()  
BEGIN  
SELECT * FROM people WHERE age > 30;  
SELECT COUNT(id) AS Total_people FROM people;    
END &&  
DELIMITER ;
//call SP
call gs3();   

//3.WE WANT TO DISPLAY ALL RECORDS OF THE TABLE WHOSE MARKS ARE GREATER THAN 70 AND COUNT ALL THE TABLE ROWS.

DELIMITER &&  
CREATE PROCEDURE get_merit_student ()  
BEGIN  
SELECT * FROM student_info WHERE marks > 70;  
SELECT COUNT(stud_code) AS Total_Student FROM student_info;    
END &&  
DELIMITER ;
//call SP
call get_merit_student();  

----PROCEDURE WITH IN PARAMETER 

//4. we have used the IN parameter as 'var1' of integer type to accept a number from users. Its body part fetches the records from the table using a SELECT statement
and returns only those rows that will be supplied by the user. It also returns the total number of rows of the specified table. See the procedure code:
//CREATE A SP TO DISPLAY THE SPECIFIC ROWS USING IN PARAMETER.
DELIMITER $$

CREATE PROCEDURE get_data21 (
    var1 int
)
BEGIN
   select * from PEOPLE limit var1;
END;$$

DELIMITER ;
//call sp
call get_data21(2);

//5.CREATE A SP TO INSERT RECORD INTO STUDENT TABLE.
DELIMITER $$
CREATE PROCEDURE INSERT_DATA22 (
 IN_NAME VARCHAR(30)
)
BEGIN
  INSERT INTO STUDENT (NAME) VALUES (IN_NAME);
END;$$
DELIMITER;
//CALL SP
CALL INSERT_DATA(“SANJAY”);

//6.create sp to display the records using IN parameter by user input.
    DELIMITER $$  
    CREATE PROCEDURE get_student (IN var1 INT)  
    BEGIN  
        SELECT * FROM student_info LIMIT var1;  
        SELECT COUNT(stud_code) AS Total_Student FROM student_info;    
    END;$$ 
    DELIMITER ;  
//call sp
Call get_student(4);

-------OUT PARAMETER

//7.CREATE SP TO DISPLAY MAXIMUM AGE FROM TABLE PEOPLE USING OUT PARAMETER.
DELIMITER $$
CREATE PROCEDURE GET_MAX_AGE1 (OUT HIGHESTAGE INT)
BEGIN 
 SELECT MAX(AGE) INTO HIGHESTAGE FROM PEOPLE;
 END;$$
 DELIMITER;
//CALL SP
CALL GET_MAX_AGE1(@M);
SELECT @M;

//8.CREATE SP TO DISPLAY MAXIMUM marks FROM TABLE STUDENT_INFO USING OUT PARAMETER.
DELIMITER $$  
    CREATE PROCEDURE display_max_mark (OUT highestmark INT)  
    BEGIN  
        SELECT MAX(marks) INTO highestmark FROM student_info;   
    END;$$  
    DELIMITER ;  
//CALL SP
CALL display_max_marks(@M);
select @M;

-------INOUT Parameter

//9.create sp to display the age of people using INOUT parameter
DELIMITER $$
CREATE PROCEDURE DISPLAY_AGE1 (INOUT VAR1 INT)
BEGIN
 SELECT AGE INTO VAR1 FROM PEOPLE WHERE ID=VAR1;
 END;$$
 DELIMITER;
//call sp
set @M=30;
CALL display_age1(@M);
select @M;

//10.create sp to display the marks from student_info table using INOUT parameter.
DELIMITER $$
CREATE PROCEDURE DISPLAY_MARKS1 (INOUT VAR1 INT)
BEGIN
 SELECT MARKS INTO VAR1 FROM STUDENT_INFO WHERE STUD_ID=VAR1;
END;$$
DELIMITER;
//call sp
SET @M='5';
CALL display_marks1(@M);
select @M;
 
---SHOW PROCEDURE

SHOW PROCEDURE STATUS WHERE DB='MYSPDB';
---TO DROP PROCEDURE

DROP PROCEDURE GS5;
//create table PRODUCT

//1.CREATE SP TO DISPLAY ALL PRODUCTS
DELIMITER $$
CREATE PROCEDURE GET_PRODUCT_DATA1 ()
BEGIN
 SELECT * FROM PRODUCT;
END;$$
DELIMITER;
//CALL SP
CALL get_product_data1();

//2.CREATE SP TO DISPLAY PRODUCTS WHOSE PRICE IS GREATER THAN 1000
DELIMITER $$
CREATE PROCEDURE GET_HIGHEST_DATA2 ()
BEGIN
 SELECT * FROM PRODUCT WHERE PRICE > 1000;
 SELECT COUNT(PRODID) AS TOTAL_PRODUCTS FROM PRODUCT;
END;$$
DELIMITER;
//call sp 
CALL GET_HIGHEST_DATA2();

//3.CREATE A SP TO DISPLAY PRODUCT WHOSE PRODNAME IS ‘TV’.
DELIMITER $$
CREATE PROCEDURE GET_PRODNAME3 ()
BEGIN
 SELECT * FROM PRODUCT WHERE NAME='TV';
END;$$
DELIMITER;
//CALL SP
CALL GET_PRODNAME3();

//4.CREATE A SP TO INSERT RECORD INTO PRODUCT TABLE.
DELIMITER $$
CREATE PROCEDURE INSERT_RECORD4 (
 IN_NAME VARCHAR(20)
)
BEGIN
 INSERT INTO PRODUCT (NAME) VALUES (IN_NAME);
END;$$
DELIMITER;
//CALL SP
CALL INSERT_RECORD4(‘POWER BANK’);

//5.CREATE SP WITH IN PARAMETER TO ACCEPT PRODID AND DISPLAY THE RELATED PRODUCT.
DELIMITER $$
CREATE PROCEDURE GET_PRODUCTDATA5 (
 IN VAR1 INT
)
BEGIN 
 SELECT * FROM PRODUCT LIMIT VAR1;
END;$$
DELIMITER;
//call sp
CALL GET_PRODUCTDATA5(3);

//6.CREATE SP WITH INOUT PARAMETER PASS THE PRODID AND GET THE PRICE AND DISPLAY IT.
DELIMITER $$
CREATE PROCEDURE DISPLAY_PRICE6 (
 INOUT VAR1 INT
)
BEGIN
 SELECT PRICE INTO VAR1 FROM PRODUCT WHERE PRODID=VAR1;
END;$$
DELIMITER;
//CALL SP
SET @M='113';
CALL display_price6 (@M);
SELECT @M;

